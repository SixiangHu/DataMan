% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/dataPlot.r
\name{dataPlot}
\alias{dataPlot}
\title{dataPlot}
\usage{
dataPlot(data,xvar,yvar,weights=NULL,byvar=NULL,interactive=FALSE,newGroupNum=10,...)
}
\arguments{
\item{data}{a data frame.}

\item{xvar}{either an integer to specify the position of the dependent variable in the data frame,
or a character string to indicate the dependent variable name.}

\item{yvar}{either an integer to specify the position of the response variable in the data frame,
or a character string to indicate the response variable name.}

\item{weights}{Optional. One of:
a numerical vector to specify the weights used for calculating weighted average of response,
a character string to specify the name of weight variable in the data frame,
an integer to specify the position of the weight variable in the data frame.}

\item{byvar}{Optinal. either an integer to specify the position of the <by> variable in the data frame,
or a character string to indicate the <by> variable name.}

\item{interactive}{logical. Set true to use googleVis package plotting interactively, which can be used in \code{\link{shiny}} apps. Currently it doesn't work when using "by" method.}

\item{newGroupNum}{Optional. An integer specifies number of new bands when levels of current plotting variable `xvar` or `by` is more than 100.}

\item{...}{xlim and ylim can be used to set the range of the ggplot2 plot. For example, xlim=c(0,1) means restrict the xaxis within (0,1).  This does not work for goolgeVis interactive plot because, because, because it is interactive, which you can zoom in and out with your mouse. :)}
}
\description{
This function allows you to visualise features of a dataset by specifying dependent and response variable.
}
\details{
Before entering modelling stage, we may want to go through variable by variable in a data set to find the
features for response variable. This function provides this functionality.

\code{\link{modelPlot}} function in this package provides similar function, but \code{\link{modelPlot}} can
only visualise the feature in a specific model. What's more, \code{\link{modelPlot}} takes longer time to create plots.
}
\examples{
dataPlot(mtcars,"wt","mpg")

dataPlot(mtcars,"wt","mpg",byvar="vs")
}
\author{
Sixiang Hu
}

