% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modelPlot.r
\name{modelPlot}
\alias{modelPlot}
\title{modelPlot}
\usage{
modelPlot(model,xvar,act,wvar=NULL,
by=NULL,dataset=NULL,newGroupNum=10,predFUN=predict,...)
}
\arguments{
\item{model}{a model object. It can be any model object that has a 
corresponding prediction function.}

\item{xvar}{either an integer to specify the position of the dependent variable 
in the data frame, or a character string to indicate the dependent variable name.}

\item{act}{either an integer to specify the position of the dependent variable 
in the data frame, or a character string to indicate the response variable}

\item{wvar}{Optional. A numerical vector, integer, or variable name to 
specify the weights used for model visualisation.}

\item{by}{Optinal. A character string indicates the variable name you want to plot the fit by.}

\item{dataset}{A data frame.}

\item{newGroupNum}{Optional. An integer specifies number of new bands 
when levels of current plotting variable `xvar` or `by` is more than 100.}

\item{predFUN}{prediction function to the corresponding model.}

\item{...}{optional augments to predFUN. For example, 
glm model needs `type="response"` to predict actual values.}
}
\description{
This function allows you visulise the model fitting by 
comparing observation, fitted and mean fitted in one plot.
}
\details{
For the purpose of comparing across different types of statistical or
machine learning models, this plot function gives a general method to 
put actual (observation), model predictions (fitted), and marginal effect
(fitted mean) on the same graph.

Currently, this function is not restricted to any package or models as long
as it has a prediction function for the model.
}
\examples{

## glm example

glm1 <- glm(formula = mpg ~ cyl + hp, family = Gamma(log), data = mtcars, weights = wt)
modelPlot(glm1,"cyl","mpg","wt",dataset=mtcars,type="response")
}
\seealso{
\code{\link{glm}}
}
\author{
Sixiang Hu
}
