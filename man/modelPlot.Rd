% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modelPlot.r
\name{modelPlot}
\alias{modelPlot}
\title{modelPlot}
\usage{
modelPlot(model,xvar,type=c("response","link"),dataset=NULL,weights=NULL,
by=NULL,modelType=c("glm","glm.nb","gbm","train"),newGroupNum=10)
}
\arguments{
\item{model}{a model object. Currently this function supports glm, gbm and train object create by caret package.}

\item{xvar}{a character string indicates the variable name you want to visulise.}

\item{type}{either "response" or "link". By default ("response") will plot on GLM response as oppose to linear predictor ("link").}

\item{dataset}{Optional. A data frame. update the glm model plot with a new dataset.}

\item{weights}{Optional. A numerical vector to specify the weights used for updating the glm model for plotting.}

\item{by}{Optinal. A character string indicates the variable name you want to plot the fit by.}

\item{modelType}{A character string. One of "glm", "glm.nb", "train" or "gbm".}

\item{newGroupNum}{Optional. An integer specifies number of new bands when levels of current plotting variable `xvar` or `by` is more than 100.}
}
\description{
This function allows you visulise the GLM or GBM fitting by comparing observation, fitted and mean fitted on the same plot.
}
\details{
For those used Emblem before, you will find this plot quite familiar.  The purpose of this function is the same that to put observation, fitted, and mean fit on the same plot for better understanding about model fitting.

Observation line for xvar is simply the weighted average on target varaible, hence if xvar is a numeric, the plot could be very messy. Will improve this in the future to banded those numeric factor.
  
Fitted line for xvar is the weighted average on model prediction.

Fitted_mean line for xvar is the predictions of the current model on a Mode dataset which keeps xvar as it is but fix all other variabel as its mean or mode.   

For GBM model, currently, can only create response plot.  Because of the fact that link function is not explicitly saved in its model object hence I need to create link function for each of the GBM family.  Will think about how to do this.

The difference between `plot.gbm` in `gbm` package and this modelPlot function is that `plot.gbm` is plotting "marginal effect" as oppose to overall fitting.    

It is now support the `caret` package's `train` model.
}
\examples{

## glm example

glm1 <- glm(formula = mpg ~ cyl + hp, family = Gamma(log), data = mtcars, weights = wt)
modelPlot(glm1,"cyl",modelType="glm")
}
\author{
Sixiang Hu
}
\seealso{
\code{\link{glm}} \code{\link{train}}
}

