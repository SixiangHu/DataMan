// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// CramersV_C
double CramersV_C(IntegerVector x, IntegerVector y, bool Bias_Cor);
RcppExport SEXP _DataMan_CramersV_C(SEXP xSEXP, SEXP ySEXP, SEXP Bias_CorSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< bool >::type Bias_Cor(Bias_CorSEXP);
    rcpp_result_gen = Rcpp::wrap(CramersV_C(x, y, Bias_Cor));
    return rcpp_result_gen;
END_RCPP
}
// CramersV_DF
Rcpp::NumericMatrix CramersV_DF(Rcpp::IntegerMatrix dm, bool Bias_Cor);
RcppExport SEXP _DataMan_CramersV_DF(SEXP dmSEXP, SEXP Bias_CorSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerMatrix >::type dm(dmSEXP);
    Rcpp::traits::input_parameter< bool >::type Bias_Cor(Bias_CorSEXP);
    rcpp_result_gen = Rcpp::wrap(CramersV_DF(dm, Bias_Cor));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_DataMan_CramersV_C", (DL_FUNC) &_DataMan_CramersV_C, 3},
    {"_DataMan_CramersV_DF", (DL_FUNC) &_DataMan_CramersV_DF, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_DataMan(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
